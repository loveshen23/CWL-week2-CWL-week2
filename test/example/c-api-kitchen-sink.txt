
BinaryenTypeNone: 0
BinaryenTypeUnreachable: 1
BinaryenTypeInt32: 2
BinaryenTypeInt64: 3
BinaryenTypeFloat32: 4
BinaryenTypeFloat64: 5
BinaryenTypeVec128: 6
BinaryenTypeFuncref: (ptr)
BinaryenTypeExternref: (ptr)
BinaryenTypeAnyref: (ptr)
BinaryenTypeEqref: (ptr)
BinaryenTypeI31ref: (ptr)
BinaryenTypeStructref: (ptr)
BinaryenTypeArrayref: (ptr)
BinaryenTypeStringref: (ptr)
BinaryenTypeStringviewWTF8: (ptr)
BinaryenTypeStringviewWTF16: (ptr)
BinaryenTypeStringviewIter: (ptr)
BinaryenTypeNullref: (ptr)
BinaryenTypeNullExternref: (ptr)
BinaryenTypeNullFuncref: (ptr)
BinaryenTypeAuto: -1
BinaryenPackedTypeNotPacked: 0
BinaryenPackedTypeInt8: 1
BinaryenPackedTypeInt16: 2
BinaryenHeapTypeExt: 0
BinaryenHeapTypeFunc: 1
BinaryenHeapTypeAny: 2
BinaryenHeapTypeEq: 3
BinaryenHeapTypeI31: 4
BinaryenHeapTypeStruct: 5
BinaryenHeapTypeArray: 6
BinaryenHeapTypeString: 7
BinaryenHeapTypeStringviewWTF8: 8
BinaryenHeapTypeStringviewWTF16: 9
BinaryenHeapTypeStringviewIter: 10
BinaryenHeapTypeNone: 11
BinaryenHeapTypeNoext: 12
BinaryenHeapTypeNofunc: 13
BinaryenFeatureMVP: 0
BinaryenFeatureAtomics: 1
BinaryenFeatureBulkMemory: 16
BinaryenFeatureMutableGlobals: 2
BinaryenFeatureNontrappingFPToInt: 4
BinaryenFeatureSignExt: 32
BinaryenFeatureSIMD128: 8
BinaryenFeatureExceptionHandling: 64
BinaryenFeatureTailCall: 128
BinaryenFeatureReferenceTypes: 256
BinaryenFeatureMultivalue: 512
BinaryenFeatureGC: 1024
BinaryenFeatureMemory64: 2048
BinaryenFeatureRelaxedSIMD: 8192
BinaryenFeatureExtendedConst: 16384
BinaryenFeatureStrings: 32768
BinaryenFeatureAll: 126975
(f32.neg
 (f32.const -33.61199951171875)
)
(table.set $0
 (i32.const 0)
 (ref.func "$kitchen()sinker")
)
(table.get $0
 (i32.const 0)
)
(table.size $0)
(table.grow $0
 (ref.null nofunc)
 (i32.const 0)
)
(module
 (type $[mut:i8] (array (mut i8)))
 (type ${mut:i32} (struct (field (mut i32))))
 (type $i32_i64_f32_f64_=>_i32 (func (param i32 i64 f32 f64) (result i32)))
 (type $[mut:i16] (array (mut i16)))
 (type $i32_=>_none (func (param i32)))
 (type $i32_f64_=>_f32 (func (param i32 f64) (result f32)))
 (type $none_=>_none (func))
 (import "module" "base" (func $an-imported (param i32 f64) (result f32)))
 (global $a-global i32 (i32.const 7))
 (global $a-mutable-global (mut f32) (f32.const 7.5))
 (global $i8Array-global (mut (ref null $[mut:i8])) (array.new_default $[mut:i8]
  (i32.const 0)
 ))
 (global $i16Array-global (mut (ref null $[mut:i16])) (array.new_default $[mut:i16]
  (i32.const 0)
 ))
 (global $i32Struct-global (mut (ref null ${mut:i32})) (struct.new_default ${mut:i32}))
 (global $string-global (mut stringref) (string.const ""))
 (memory $0 (shared 1 256))
 (data (i32.const 10) "hello, world")
 (data "I am passive")
 (table $tab 0 100 funcref)
 (table $0 1 1 funcref)
 (elem $0 (table $0) (i32.const 0) func "$kitchen()sinker")
 (elem $passive func "$kitchen()sinker")
 (tag $a-tag (param i32))
 (export "mem" (memory $0))
 (export "kitchen_sinker" (func "$kitchen()sinker"))
 (start $starter)
 (func "$kitchen()sinker" (type $i32_i64_f32_f64_=>_i32) (param $0 i32) (param $1 i64) (param $2 f32) (param $3 f64) (result i32)
  (local $4 i32)
  (local $5 externref)
  (block $the-body (result i32)
   (block $the-nothing
    (drop
     (block $the-value (result i32)
      (drop
       (i32.clz
        (i32.const -10)
       )
      )
      (drop
       (i64.ctz
        (i64.const -22)
       )
      )
      (drop
       (i32.popcnt
        (i32.const -10)
       )
      )
      (drop
       (f32.neg
        (f32.const -33.61199951171875)
       )
      )
      (drop
       (f64.abs
        (f64.const -9005.841)
       )
      )
      (drop
       (f32.ceil
        (f32.const -33.61199951171875)
       )
      )
      (drop
       (f64.floor
        (f64.const -9005.841)
       )
      )
      (drop
       (f32.trunc
        (f32.const -33.61199951171875)
       )
      )
      (drop
       (f32.nearest
        (f32.const -33.61199951171875)
       )
      )
      (drop
       (f64.sqrt
        (f64.const -9005.841)
       )
      )
      (drop
       (i32.eqz
        (i32.const -10)
       )
      )
      (drop
       (i64.extend_i32_s
        (i32.const -10)
       )
      )
      (drop
       (i64.extend_i32_u
        (i32.const -10)
       )
      )
      (drop
       (i32.wrap_i64
        (i64.const -22)
       )
      )
      (drop
       (i32.trunc_f32_s
        (f32.const -33.61199951171875)
       )
      )
      (drop
       (i64.trunc_f32_s
        (f32.const -33.61199951171875)
       )
      )
      (drop
       (i32.trunc_f32_u
        (f32.const -33.61199951171875)
       )
      )
      (drop
       (i64.trunc_f32_u
        (f32.const -33.61199951171875)
       )
      )
      (drop
       (i32.trunc_f64_s
        (f64.const -9005.841)
       )
      )
      (drop
       (i64.trunc_f64_s
        (f64.const -9005.841)
       )
      )
      (drop
       (i32.trunc_f64_u
        (f64.const -9005.841)
       )
      )
      (drop
       (i64.trunc_f64_u
        (f64.const -9005.841)
       )
      )
      (drop
       (i32.trunc_sat_f32_s
        (f32.const -33.61199951171875)
       )
      )
      (drop
       (i64.trunc_sat_f32_s
        (f32.const -33.61199951171875)
       )
      )
      (drop
       (i32.trunc_sat_f32_u
        (f32.const -33.61199951171875)
       )
      )
      (drop
       (i64.trunc_sat_f32_u
        (f32.const -33.61199951171875)
       )
      )
      (drop
       (i32.trunc_sat_f64_s
        (f64.const -9005.841)
       )
      )
      (drop
       (i64.trunc_sat_f64_s
        (f64.const -9005.841)
       )
      )
      (drop
       (i32.trunc_sat_f64_u
        (f64.const -9005.841)
       )
      )
      (drop
       (i64.trunc_sat_f64_u
        (f64.const -9005.841)
       )
      )
      (drop
       (i32.reinterpret_f32
        (f32.const -33.61199951171875)
       )
      )
      (drop
       (i64.reinterpret_f64
        (f64.const -9005.841)
       )
      )
      (drop
       (f32.convert_i32_s
        (i32.const -10)
       )
      )
      (drop
       (f64.convert_i32_s
        (i32.const -10)
       )
      )
      (drop
       (f32.convert_i32_u
        (i32.const -10)
       )
      )
      (drop
       (f64.convert_i32_u
        (i32.const -10)
       )
      )
      (drop
       (f32.convert_i64_s
        (i64.const -22)
       )
      )
      (drop
       (f64.convert_i64_s
        (i64.const -22)
       )
      )
      (drop
       (f32.convert_i64_u
        (i64.const -22)
       )
      )
      (drop
       (f64.convert_i64_u
        (i64.const -22)
       )
      )
      (drop
       (f64.promote_f32
        (f32.const -33.61199951171875)
       )
      )
      (drop
       (f32.demote_f64
        (f64.const -9005.841)
       )
      )
      (drop
       (f32.reinterpret_i32
        (i32.const -10)
       )
      )
      (drop
       (f64.reinterpret_i64
        (i64.const -22)
       )
      )
      (drop
       (i8x16.splat
        (i32.const -10)
       )
      )
      (drop
       (i16x8.splat
        (i32.const -10)
       )
      )
      (drop
       (i32x4.splat
        (i32.const -10)
       )
      )
      (drop
       (i64x2.splat
        (i64.const -22)
       )
      )
      (drop
       (f32x4.splat
        (f32.const -33.61199951171875)
       )
      )
      (drop
       (f64x2.splat
        (f64.const -9005.841)
       )
      )
      (drop
       (v128.not
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (v128.any_true
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i8x16.popcnt
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i8x16.abs
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i8x16.neg
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i8x16.all_true
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i8x16.bitmask
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i16x8.abs
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i16x8.neg
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i16x8.all_true
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i16x8.bitmask
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i32x4.abs
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i32x4.neg
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i32x4.all_true
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i32x4.bitmask
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i64x2.abs
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i64x2.neg
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i64x2.all_true
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i64x2.bitmask
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (f32x4.abs
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (f32x4.neg
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (f32x4.sqrt
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (f64x2.abs
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (f64x2.neg
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (f64x2.sqrt
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i32x4.trunc_sat_f32x4_s
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i32x4.trunc_sat_f32x4_u
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (f32x4.convert_i32x4_s
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (f32x4.convert_i32x4_u
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i16x8.extend_low_i8x16_s
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i16x8.extend_high_i8x16_s
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i16x8.extend_low_i8x16_u
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i16x8.extend_high_i8x16_u
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i32x4.extend_low_i16x8_s
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i32x4.extend_high_i16x8_s
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i32x4.extend_low_i16x8_u
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i32x4.extend_high_i16x8_u
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i64x2.extend_low_i32x4_s
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i64x2.extend_high_i32x4_s
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i64x2.extend_low_i32x4_u
        (v128.const i32x4 0x04030201 0x08070605 0x0c0b0a09 0x100f0e0d)
       )
      )
      (drop
       (i64x2.extend_high_i32x4_u