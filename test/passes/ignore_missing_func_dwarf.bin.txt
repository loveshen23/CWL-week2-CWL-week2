(module
 (type $none_=>_none (func))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (import "env" "memory" (memory $mimport$0 256 256))
 (import "env" "__indirect_function_table" (table $timport$0 1 funcref))
 (global $global$0 (mut i32) (i32.const 5244064))
 (global $global$1 i32 (i32.const 1172))
 (data (i32.const 1024) "\nvoid used(int x) {\n  x++;\n  x--;\n  return x;\n}\n\nvoid unused(int x) {\n  x >>= 1;\n  x <<= 1;\n  return x;\n}\n\nint main() {\n  return used(42);\n}\n\00")
 (data (i32.const 1168) "\00\04\00\00")
 (export "__wasm_call_ctors" (func $__wasm_call_ctors))
 (export "main" (func $main))
 (export "__data_end" (global $global$1))
 (func $__wasm_call_ctors
 )
 (func $used\28int\29 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  ;; code offset: 0xe
  (local.set $1
   ;; code offset: 0x8
   (global.get $global$0)
  )
  ;; code offset: 0x12
  (local.set $2
   ;; code offset: 0x10
   (i32.const 16)
  )
  ;; code offset: 0x19
  (local.set $3
   ;; code offset: 0x18
   (i32.sub
    ;; code offset: 0x14
    (local.get $1)
    ;; code offset: 0x16
    (local.get $2)
   )
  )
  ;; code offset: 0x1f
  (i32.store offset=12
   ;; code offset: 0x1b
   (local.get $3)
   ;; code offset: 0x1d
   (local.get $0)
  )
  ;; code offset: 0x27
  (local.set $4
   ;; code offset: 0x24
   (i32.load offset=12
    ;; code offset: 0x22
    (local.get $3)
   )
  )
  ;; code offset: 0x2b
  (local.set $5
   ;; code offset: 0x29
   (i32.const 1)
  )
  ;; code offset: 0x32
  (local.set $6
   ;; code offset: 0x31
   (i32.add
    ;; code offset: 0x2d
    (local.get $4)
    ;; code offset: 0x2f
    (local.get $5)
   )
  )
  ;; code offset: 0x38
  (i32.store offset=12
   ;; code offset: 0x34
   (local.get $3)
   ;; code offset: 0x36
   (local.get $6)
  )
  ;; code offset: 0x40
  (local.set $7
   ;; code offset: 0x3d
   (i32.load offset=12
    ;; code offset: 0x3b
    (local.get $3)
   )
  )
  ;; code offset: 0x44
  (local.set $8
   ;; code offset: 0x42
   (i32.const -1)
  )
  ;; code offset: 0x4b
  (local.set $9
   ;; code offset: 0x4a
   (i32.add
    ;; code offset: 0x46
    (local.get $7)
    ;; code offset: 0x48
    (local.get $8)
   )
  )
  ;; code offset: 0x51
  (i32.store offset=12
   ;; code offset: 0x4d
   (local.get $3)
   ;; code offset: 0x4f
   (local.get $9)
  )
  ;; code offset: 0x59
  (local.set $10
   ;; code offset: 0x56
   (i32.load offset=12
    ;; code offset: 0x54
    (local.get $3)
   )
  )
  ;; code offset: 0x5d
  (return
   ;; code offset: 0x5b
   (local.get $10)
  )
 )
 (func $__original_main (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  ;; code offset: 0x69
  (local.set $0
   ;; code offset: 0x63
   (global.get $global$0)
  )
  ;; code offset: 0x6d
  (local.set $1
   ;; code offset: 0x6b
   (i32.const 16)
  )
  ;; code offset: 0x74
  (local.set $2
   ;; code offset: 0x73
   (i32.sub
    ;; code offset: 0x6f
    (local.get $0)
    ;; code offset: 0x71
    (local.get $1)
   )
  )
  ;; code offset: 0x78
  (global.set $global$0
   ;; code offset: 0x76
   (local.get $2)
  )
  ;; code offset: 0x80
  (local.set $3
   ;; code offset: 0x7e
   (i32.const 42)
  )
  ;; code offset: 0x84
  (local.set $4
   ;; code offset: 0x82
   (i32.const 0)
  )
  ;; code offset: 0x8a
  (i32.store offset=12
   ;; code offset: 0x86
   (local.get $2)
   ;; code offset: 0x88
   (local.get $4)
  )
  ;; code offset: 0x95
  (local.set $5
   ;; code offset: 0x8f
   (call $used\28int\29
    ;; code offset: 0x8d
    (local.get $3)
   )
  )
  ;; code offset: 0x99
  (local.set $6
   ;; code offset: 0x97
   (i32.const 0)
  )
  ;; code offset: 0xa4
  (local.set $7
   ;; code offset: 0x9d
   (i32.load offset=1168
    ;; code offset: 0x9b
    (local.get $6)
   )
  )
  ;; code offset: 0xab
  (local.set $8
   ;; code offset: 0xaa
   (i32.add
    ;; code offset: 0xa6
    (local.get $5)
    ;; code offset: 0xa8
    (local.get $7)
   )
  )
  ;; code offset: 0xaf
  (lo