total
 [exports]      : 1       
 [funcs]        : 1       
 [globals]      : 0       
 [imports]      : 10      
 [memories]     : 0       
 [memory-data]  : 0       
 [table-data]   : 0       
 [tables]       : 0       
 [tags]         : 0       
 [total]        : 1964    
 [vars]         : 9       
 Binary         : 240     
 Block          : 68      
 Break          : 90      
 Call           : 22      
 CallIndirect   : 1       
 Const          : 175     
 Drop           : 8       
 If             : 27      
 Load           : 313     
 LocalGet       : 633     
 LocalSet       : 181     
 Loop           : 3       
 Return         : 3       
 Select         : 11      
 Store          : 160     
 Unary          : 29      
(module
 (type $0 (func (param i32 i32 i32) (result i32)))
 (type $2 (func (param i32 i32) (result i32)))
 (type $3 (func (param i32 i32 i32 i32)))
 (type $10 (func (param i32)))
 (import "env" "memory" (memory $108 4096 4096))
 (import "env" "table" (table $timport$109 10 funcref))
 (import "env" "crc32" (func $fimport$14 (param i32 i32 i32) (result i32)))
 (import "env" "adler32" (func $fimport$15 (param i32 i32 i32) (result i32)))
 (import "env" "deflate_huff" (func $fimport$20 (param i32 i32) (result i32)))
 (import "env" "deflate_rle" (func $fimport$21 (param i32 i32) (result i32)))
 (import "env" "_tr_stored_block" (func $fimport$29 (param i32 i32 i32 i32)))
 (import "env" "_tr_align" (func $fimport$30 (param i32)))
 (import "env" "memset" (func $fimport$97 (param i32 i32 i32) (result i32)))
 (import "env" "memcpy" (func $fimport$98 (param i32 i32 i32) (result i32)))
 (export "deflate" (func $0))
 (func $0 (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local.set $3
   (i32.const -2)
  )
  (block $folding-inner1
   (block $folding-inner0
    (block $label$1
     (br_if $label$1
      (i32.eqz
       (local.get $0)
      )
     )
     (br_if $label$1
      (i32.gt_u
       (local.get $1)
       (i32.const 5)
      )
     )
     (br_if $label$1
      (i32.eqz
       (local.tee $2
        (i32.load offset=28
         (local.get $0)
        )
       )
      )
     )
     (block $label$2
      (block $label$3
       (br_if $label$3
        (i32.eqz
         (i32.load offset=12
          (local.get $0)
         )
        )
       )
       (if
        (i32.eqz
         (i32.load
          (local.get $0)
         )
        )
        (br_if $label$3
         (i32.load offset=4
          (local.get $0)
         )
        )
       )
       (local.set $3
        (i32.load offset=4
         (local.get $2)
        )
       )
       (br_if $label$2
        (i32.eq
         (local.get $1)
         (i32.const 4)
        )
       )
       (br_if $label$2
        (i32.ne
         (local.get $3)
         (i32.const 666)
        )
       )
      )
      (i32.store offset=24
       (local.get $0)
       (i32.load
        (i32.const 16992)
       )
      )
      (return
       (i32.const -2)
      )
     )
     (if
      (i32.eqz
       (i32.load offset=16
        (local.get $0)
       )
      )
      (br $folding-inner0)
     )
     (i32.store
      (local.get $2)
      (local.get $0)
     )
     (local.set $7
      (i32.load offset=40
       (local.get $2)
      )
     )
     (i32.store offset=40
      (local.get $2)
      (local.get $1)
     )
     (block $label$6
      (block $label$7
       (block $label$8
        (block $label$9
         (block $label$10
          (block $label$11
           (block $label$12
            (block $label$13
             (block $label$14
              (block $label$15
               (block $label$16
                (if
                 (i32.eq
                  (local.get $3)
                  (i32.const 42)
                 )
                 (block
                  (if
                   (i32.eq
                    (i32.load offset=24
                     (local.get $2)
                    )
                    (i32.const 2)
                   )
                   (block
                    (i32.store offset=48
                     (local.get $0)
                     (call $fimport$14
                      (i32.const 0)
                      (i32.const 0)
                      (i32.const 0)
                     )
                    )
                    (i32.store offset=20
                     (local.get $2)
                     (i32.add
                      (local.tee $3
                       (i32.load offset=20
                        (local.get $2)
                       )
                      )
                      (i32.const 1)
                     )
                    )
                    (i32.store8
                     (i32.add
                      (local.get $3)
                      (i32.load offset=8
                       (local.get $2)
                      )
                     )
                     (i32.const 31)
                    )
                    (i32.store offset=20
                     (local.get $2)
                     (i32.add
                      (local.tee $3
                       (i32.load offset=20
                        (local.get $2)
                       )
                      )
                      (i32.const 1)
                     )
                    )
                    (i32.store8
                     (i32.add
                      (local.get $3)
                      (i32.load offset=8
                       (