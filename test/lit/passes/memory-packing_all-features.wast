;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.
;; NOTE: This test was ported using port_passes_tests_to_lit.py and could be cleaned up.

;; RUN: foreach %s %t wasm-opt --memory-packing --all-features -S -o - | filecheck %s

(module
  ;; CHECK:      (import "env" "memoryBase" (global $memoryBase i32))

  ;; CHECK:      (memory $0 2048 2048)
  (memory $0 2048 2048)
  (import "env" "memoryBase" (global $memoryBase i32))
  ;; nothing
)

(module
  ;; CHECK:      (import "env" "memoryBase" (global $memoryBase i32))

  ;; CHECK:      (memory $0 2048 2048)
  (memory $0 2048 2048)
  (import "env" "memoryBase" (global $memoryBase i32))
  (data (i32.const 4066) "") ;; empty
)

(module
  ;; CHECK:      (import "env" "memoryBase" (global $memoryBase i32))

  ;; CHECK:      (memory $0 2048 2048)
  (memory $0 2048 2048)
  (import "env" "memoryBase" (global $memoryBase i32))

  (data (global.get $memoryBase) "waka this cannot be optimized\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00we don't know where it will go")
)

;; CHECK:      (data (global.get $memoryBase) "waka this cannot be optimized\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00we don\'t know where it will go")
(module
  (memory 1 1)

  (data (i32.const 1024) "waka this CAN be optimized\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00we DO know where it will go")

  (data (i32.const 2000) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00zeros before")

  (data (i32.const 3000) "zeros after\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")

  (data (i32.const 4000) "zeros\00in\00the\00middle\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00nice skip here\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00another\00but no")

  ;; CHECK:      (type $none_=>_none (func))

  ;; CHECK:      (memory $0 1 1)

  ;; CHECK:      (data (i32.const 1024) "waka this CAN be optimized")

  ;; CHECK:      (data (i32.const 1107) "we DO know where it will go")

  ;; CHECK:      (data (i32.const 2057) "zeros before")

  ;; CHECK:      (data (i32.const 3000) "zeros after")

  ;; CHECK:      (data (i32.const 4000) "zeros\00in\00the\00middle")

  ;; CHECK:      (data (i32.const 4035) "nice skip here")

  ;; CHECK:      (data (i32.const 4066) "another\00but no")

  ;; CHECK:      (func $nonzero-size-init-of-active-will-trap (type $none_=>_none)
  ;; CHECK-NEXT:  (block
  ;; CHECK-NEXT:   (drop
  ;; CHECK-NEXT:    (i32.const 42)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (drop
  ;; CHECK-NEXT:    (i32.const 0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (drop
  ;; CHECK-NEXT:    (i32.const 13)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (unreachable)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (nop)
  ;; CHECK-NEXT: )
  (func $nonzero-size-init-of-active-will-trap
    (memory.init 0
      (i32.const 42)
      (i32.const 0)
      (i32.const 13)
    )
    (data.drop 0)
  )

  ;; CHECK:      (func $nonzero-offset-init-of-active-will-trap (type $none_=>_none)
  ;; CHECK-NEXT:  (block
  ;; CHECK-NEXT:   (drop
  ;; CHECK-NEXT:    (i32.const 42)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (drop
  ;; CHECK-NEXT:    (i32.const 13)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (drop
  ;; CHECK-NEXT:    (i32.const 0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (unreachable)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (nop)
  ;; CHECK-NEXT: )
  (func $nonzero-offset-init-of-active-will-trap
    (memory.init 0
      (i32.const 42)
      (i32.const 13)
      (i32.const 0)
    )
    (data.drop 0)
  )

  ;; CHECK:      (func $zero-offset-size-init-of-active-may-trap (type $none_=>_none)
  ;; CHECK-NEXT:  (if
  ;; CHECK-NEXT:   (i32.gt_u
  ;; CHECK-NEXT:    (i32.const 42)
  ;; CHECK-NEXT:    (i32.shl
  ;; CHECK-NEXT:     (memory.size)
  ;; CHECK-NEXT:     (i32.const 16)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (unreachable)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (nop)
  ;; CHECK-NEXT: )
  (func $zero-offset-size-init-of-active-may-trap
    (memory.init 0
      (i32.const 42)
      (i32.const 0)
      (i32.const 0)
    )
    (data.drop 0)
  )
)

(module
  ;; CHECK:      (type $none_=>_none (func))

  ;; CHECK:      (global $__mem_segment_drop_state (mut i32) (i32.const 0))

  ;; CHECK:      (global $__mem_segment_drop_state_0 (mut i32) (i32.const 0))

  ;; CHECK:      (global $__mem_segment_drop_state_1 (mut i32) (i32.const 0))

  ;; CHECK:      (memory $0 2048 2048)
  (memory $0 2048 2048)

  (data "not referenced, delete me") ;; 0

  ;; CHECK:      (data "zeroes at start")

  ;; CHECK:      (data "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00zeroes at start")
  (data "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00zeroes at start") ;; 1

  ;; CHECK:      (data "\00\00\00few zeroes at start")

  ;; CHECK:      (data "zeroes at end")

  ;; CHECK:      (data "zeroes at end\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")

  ;; CHECK:      (data "few zeroes at end\00\00\00")

  ;; CHECK:      (data "zeroes")

  ;; CHECK:      (data "in middle")

  ;; CHECK:      (data "zeroes\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00in middle")

  ;; CHECK:      (data "few zeroes\00\00\00in middle")

  ;; CHECK:      (data "multiple")

  ;; CHECK:      (data "spans")

  ;; CHECK:      (data "of zeroes")

  ;; CHECK:      (data "even")

  ;; CHECK:      (data "more")

  ;; CHEC