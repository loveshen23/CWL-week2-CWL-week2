;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.
;; NOTE: This test was ported using port_passes_tests_to_lit.py and could be cleaned up.

;; RUN: foreach %s %t wasm-opt --instrument-locals --all-features --disable-gc -S -o - | filecheck %s

(module
  ;; CHECK:      (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))

  ;; CHECK:      (type $i32_i32_i64_=>_i64 (func (param i32 i32 i64) (result i64)))

  ;; CHECK:      (type $i32_i32_f32_=>_f32 (func (param i32 i32 f32) (result f32)))

  ;; CHECK:      (type $i32_i32_f64_=>_f64 (func (param i32 i32 f64) (result f64)))

  ;; CHECK:      (type $i32_i32_funcref_=>_funcref (func (param i32 i32 funcref) (result funcref)))

  ;; CHECK:      (type $i32_i32_externref_=>_externref (func (param i32 i32 externref) (result externref)))

  ;; CHECK:      (type $i32_i32_v128_=>_v128 (func (param i32 i32 v128) (result v128)))

  ;; CHECK:      (type $none_=>_none (func))

  ;; CHECK:      (import "env" "get_i32" (func $get_i32 (param i32 i32 i32) (result i32)))

  ;; CHECK:      (import "env" "get_i64" (func $get_i64 (param i32 i32 i64) (result i64)))

  ;; CHECK:      (import "env" "get_f32" (func $get_f32 (param i32 i32 f32) (result f32)))

  ;; CHECK:      (import "env" "get_f64" (func $get_f64 (param i32 i32 f64) (result f64)))

  ;; CHECK:      (import "env" "set_i32" (func $set_i32 (param i32 i32 i32) (result i32)))

  ;; CHECK:      (import "env" "set_i64" (func $set_i64 (param i32 i32 i64) (result i64)))

  ;; CHECK:      (import "env" "set_f32" (func $set_f32 (param i32 i32 f32) (result f32)))

  ;; CHECK:      (import "env" "set_f64" (func $set_f64 (param i32 i32 f64) (result f64)))

  ;; CHECK:      (import "env" "get_funcref" (func $get_funcref (param i32 i32 funcref) (result funcref)))

  ;; CHECK:      (import "env" "set_funcref" (func $set_funcref (param i32 i32 funcref) (result funcref)))

  ;; CHECK:      (import "env" "get_externref" (func $get_externref (param i32 i32 externref) (result externref)))

  ;; CHECK:      (import "env" "set_externref" (func $set_externref (param i32 i32 externref) (result externref)))

  ;; CHECK:      (import "env" "get_v128" (func $get_v128 (param i32 i32 v128) (result v128)))

  ;; CHECK:      (import "env" "set_v128" (func $set_v128 (param i32 i32 v128) (result v128)))

  ;; CHECK:      (elem declare func $test)

  ;; CHECK:      (func $test
  ;; CHECK-NEXT:  (local $x i32)
  ;; CHECK-NEXT:  (local $y i64)
  ;; CHECK-NEXT:  (local $z f32)
  ;; CHECK-NEXT:  (local $w f64)
  ;; CHECK-NEXT:  (local $F funcref)
  ;; CHECK-NEXT:  (local $X externref)
  ;; CHECK-NEXT:  (local $S v128)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (call $get_i32
  ;; CHECK-NEXT:    (i32.const 0)
  ;; CHECK-NEXT:    (i32.const 0)
  ;; CHECK-NEXT:    (local.get $x)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.get $y)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (call $get_f32
  ;; CHECK-NEXT:    (i32.const 1)
  ;; CHECK-NEXT:    (i32.const 2)
  ;; CHECK-NEXT:    (local.get $z)
  ;; CHECK-NEXT:   )
  